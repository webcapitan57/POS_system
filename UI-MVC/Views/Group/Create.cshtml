@using POC.BL.Domain.profile
@model UI_MVC.Models.CreateGroupViewModel

@{
    ViewBag.SetupLogo = Model.Setup.Logo.Picture;
    ViewBag.SetupName = Model.Setup.Name;
    ViewBag.Title = "Groep toevoegen";
    Layout = "_Layout";
}
<link rel="stylesheet" href="@Url.Content("~/dist/group.css")" type="text/css"/>



<form asp-controller="Group" asp-action="Create" method="post">
    <div class="group-create-title-button">
        <h2>Groep toevoegen</h2>
        <input type="submit" class="btn btn-primary" value="Groep aanmaken"/>
    </div>
    <h5>Groepsgegevens</h5>
    <input asp-for="SetUpId" hidden>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="GroupName">Groepsnaam *</label>
            <input asp-for="GroupName" class="form-control"/>
            <span class="text-danger" asp-validation-for="GroupName"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="MaxParticipants">Max aantal deelnemers</label>
            <input asp-for="MaxParticipants" placeholder="Ongelimiteerd" class="form-control">
            <span class="text-danger" asp-validation-for="MaxParticipants"></span>
        </div>
    </div>


    @if (Model.Answers.Count != 0)
    {
        <div class="col-md-6 gt-pw-info">
            <h5>Profielvragen</h5>
            @for (var i = 0; i < @Model.Answers.Count; i++)
            {
                @Html.HiddenFor(model => Model.Answers[i].AnsweredQuestion.ProfileQuestionId)
                switch (Model.Answers[i].AnsweredQuestion)
                {
                    case GroupMCProfileQuestion mcQuestion:
                        <div class="form-group">
                            <label asp-for="@Model.Answers[i].Value">@Model.Answers[i].AnsweredQuestion.Question @(mcQuestion.IsRequired ? "*" : "")</label>
                            <select asp-for="@Model.Answers[i].Value" class="form-control"}>
                                <option value="">Kies een optie</option>
                                @foreach (var option in mcQuestion.GroupProfileOptions)
                                {
                                    <option value="@option.Value">@option.Value</option>
                                }
                            </select>
                        </div>

                        break;

                    case GroupProfileQuestion question:
                        <div class="form-group">
                            <label>@question.Question @(question.IsRequired ? "*" : "")</label>
                            <input asp-for="Answers[i].Value" class="form-control">
                        </div>
                        break;
                }
            }
        </div>
    }
    @if (User.IsInRole("GuestTeacher"))
    {
        <div class="form-group col-md-6 gt-pw-info ">
            <div class="gt-pw-info-icon-label">
                <h5>Wachtwoord</h5>
                <div class="tooltip">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-question" viewBox="0 0 16 16">
                        <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286zm1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z"/>
                    </svg>
                    <span class="tooltiptext">
                        geef een wachtwoord mee om de volgende keer terug toegang te hebben tot deze groep
                    </span>
                </div>
            </div>
            <div class="form-group">
                <input asp-for="Password" class="form-control"/>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
        </div>
    }

    @if (Model.Errors != null)
    {
        @foreach (var error in Model.Errors)
        {
            <div class="text-danger">• @error</div>
        }
    }
<div hidden id="primColor">@Model.Setup.PrimColor</div>
<div hidden id="secColor" >@Model.Setup.SecColor</div>



</form>

@section Scripts {
    <script type="module" src="~/dist/group.entry.js" defer></script>
    <script type="module" src="~/dist/setupcolors.entry.js"></script>
}