// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.7.0.0
//      SpecFlow Generator Version:3.7.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.7.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class LeerkrachtFotosModererenFeature : object, Xunit.IClassFixture<LeerkrachtFotosModererenFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "modereren.feature"
#line hidden
        
        public LeerkrachtFotosModererenFeature(LeerkrachtFotosModererenFeature.FixtureData fixtureData, Tests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "features", "leerkracht foto\'s modereren", "  Als leerkracht Wil ik een plaats hebben waar ik foto’s kan modereren Om de best" +
                    "e foto’s te kunnen onderscheiden van de slechte/ongepaste", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
  #line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Question",
                        "Options"});
            table8.AddRow(new string[] {
                        "1",
                        "waarom nam je deze foto",
                        ""});
            table8.AddRow(new string[] {
                        "2",
                        "waarom vind je deze mooi",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "is dit subjectief of objectief",
                        "subjectief,objectief"});
#line 8
    testRunner.Given("SideQuestions:", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Question",
                        "SideQuestions"});
            table9.AddRow(new string[] {
                        "1",
                        "neem een foto uit je buurt",
                        "1"});
            table9.AddRow(new string[] {
                        "2",
                        "wat vind je mooi",
                        "2,3"});
            table9.AddRow(new string[] {
                        "3",
                        "wat vind je lelijk",
                        ""});
#line 14
    testRunner.Given("PhotoQuestions:", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Title",
                        "Questions"});
            table10.AddRow(new string[] {
                        "1",
                        "mijn buurt",
                        "1"});
            table10.AddRow(new string[] {
                        "2",
                        "wat is kunst",
                        "2,3"});
#line 22
 testRunner.Given("SetTasks:", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Tasks"});
            table11.AddRow(new string[] {
                        "1",
                        "2"});
#line 27
  testRunner.Given("Setup:", ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserId",
                        "Name",
                        "setup"});
            table12.AddRow(new string[] {
                        "1",
                        "karel de grote",
                        "1"});
#line 31
  testRunner.Given("Teacher:", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Groupcode",
                        "Teacher",
                        "Tasks"});
            table13.AddRow(new string[] {
                        "1A1B1C",
                        "1",
                        "1,2"});
            table13.AddRow(new string[] {
                        "2D2E2F",
                        "1",
                        "1"});
            table13.AddRow(new string[] {
                        "3G3H3I",
                        "1",
                        "2"});
#line 35
    testRunner.Given("Groups:", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Group"});
            table14.AddRow(new string[] {
                        "1",
                        "1A1B1C"});
            table14.AddRow(new string[] {
                        "2",
                        "1A1B1C"});
            table14.AddRow(new string[] {
                        "3",
                        "2D2E2F"});
            table14.AddRow(new string[] {
                        "4",
                        "2D2E2F"});
#line 41
    testRunner.Given("Students:", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Image"});
            table15.AddRow(new string[] {
                        "1",
                        "mijnbuurt.jpg"});
            table15.AddRow(new string[] {
                        "2",
                        "ookmijnbuurt.jpg"});
            table15.AddRow(new string[] {
                        "3",
                        "kappa.jpg"});
            table15.AddRow(new string[] {
                        "4",
                        "pogchamp.jpg"});
            table15.AddRow(new string[] {
                        "5",
                        "pikachu.jpg"});
            table15.AddRow(new string[] {
                        "6",
                        "froakie.jpg"});
            table15.AddRow(new string[] {
                        "7",
                        "kingkong.jpg"});
            table15.AddRow(new string[] {
                        "8",
                        "spiderman.jpg"});
            table15.AddRow(new string[] {
                        "9",
                        "charmander.jpg"});
            table15.AddRow(new string[] {
                        "10",
                        "jigglypuff.jpg"});
            table15.AddRow(new string[] {
                        "11",
                        "raichu.jpg"});
            table15.AddRow(new string[] {
                        "12",
                        "kaonashi.jpg"});
            table15.AddRow(new string[] {
                        "13",
                        "Yubaba.jpg"});
            table15.AddRow(new string[] {
                        "14",
                        "totoro.jpg"});
#line 48
    testRunner.Given("Photos:", ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "GivenAnswer",
                        "SideQuestion"});
            table16.AddRow(new string[] {
                        "1",
                        "hjfj",
                        "1"});
            table16.AddRow(new string[] {
                        "2",
                        "omdat dit het eerste is dat ik tegen kwam en te lui ben verder te zoeken",
                        "2"});
            table16.AddRow(new string[] {
                        "3",
                        "omdat ik het zeg",
                        "2"});
            table16.AddRow(new string[] {
                        "4",
                        "omdat ik het zeg4",
                        "1"});
            table16.AddRow(new string[] {
                        "5",
                        "omdat ik het zeg5",
                        "2"});
            table16.AddRow(new string[] {
                        "6",
                        "omdat ik het zeg6",
                        "1"});
            table16.AddRow(new string[] {
                        "7",
                        "omdat ik het zeg",
                        "2"});
            table16.AddRow(new string[] {
                        "8",
                        "omdat ik het zeg4",
                        "1"});
            table16.AddRow(new string[] {
                        "9",
                        "omdat ik het zeg5",
                        "2"});
            table16.AddRow(new string[] {
                        "10",
                        "omdat ik het zeg6",
                        "2"});
            table16.AddRow(new string[] {
                        "11",
                        "objectief",
                        "3"});
            table16.AddRow(new string[] {
                        "12",
                        "omdat ik het zeg4",
                        "2"});
            table16.AddRow(new string[] {
                        "13",
                        "omdat ik het zeg5",
                        "2"});
            table16.AddRow(new string[] {
                        "14",
                        "subjectief",
                        "2"});
#line 65
   testRunner.Given("SideAnswers:", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "PhotoQuestion",
                        "SideAnswers",
                        "AssignedPhoto"});
            table17.AddRow(new string[] {
                        "1",
                        "1",
                        "1",
                        "2"});
            table17.AddRow(new string[] {
                        "2",
                        "1",
                        "4",
                        "1"});
            table17.AddRow(new string[] {
                        "3",
                        "2",
                        "2,3",
                        "11"});
            table17.AddRow(new string[] {
                        "4",
                        "3",
                        "",
                        "7"});
            table17.AddRow(new string[] {
                        "5",
                        "3",
                        "",
                        "9"});
            table17.AddRow(new string[] {
                        "6",
                        "3",
                        "",
                        "12"});
            table17.AddRow(new string[] {
                        "7",
                        "2",
                        "9,10",
                        ""});
            table17.AddRow(new string[] {
                        "8",
                        "2",
                        "5,7",
                        ""});
            table17.AddRow(new string[] {
                        "9",
                        "1",
                        "6",
                        "8"});
            table17.AddRow(new string[] {
                        "10",
                        "1",
                        "8",
                        ""});
            table17.AddRow(new string[] {
                        "11",
                        "3",
                        "",
                        "2"});
            table17.AddRow(new string[] {
                        "12",
                        "2",
                        "11,12",
                        "3"});
            table17.AddRow(new string[] {
                        "13",
                        "2",
                        "13,14",
                        "4"});
#line 82
   testRunner.Given("Answers:", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "SentPhotos",
                        "Answers",
                        "SetTask",
                        "Group"});
            table18.AddRow(new string[] {
                        "1",
                        "2",
                        "1",
                        "1",
                        "1A1B1C"});
            table18.AddRow(new string[] {
                        "2",
                        "2,3,4",
                        "11,12,13",
                        "2",
                        "2D2E2F"});
            table18.AddRow(new string[] {
                        "3",
                        "1,8,10",
                        "2,9,10",
                        "1",
                        "3G3H3I"});
            table18.AddRow(new string[] {
                        "4",
                        "7,9",
                        "4,5",
                        "2",
                        "3G3H3I"});
            table18.AddRow(new string[] {
                        "5",
                        "",
                        "",
                        "1",
                        "3G3H3I"});
            table18.AddRow(new string[] {
                        "6",
                        "11,12",
                        "3,6",
                        "2",
                        "3G3H3I"});
#line 98
    testRunner.Given("SetTaskDeliveries:", ((string)(null)), table18, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="one submitted foto is detected with face")]
        [Xunit.TraitAttribute("FeatureTitle", "leerkracht foto\'s modereren")]
        [Xunit.TraitAttribute("Description", "one submitted foto is detected with face")]
        public virtual void OneSubmittedFotoIsDetectedWithFace()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("one submitted foto is detected with face", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 110
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
  this.FeatureBackground();
#line hidden
#line 111
    testRunner.When("group \'2D2E2F\' deliveres", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
    testRunner.Then("Value flagged in answer \'11\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
    testRunner.And("Value flagged in answer \'12\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
    testRunner.And("Value flagged in answer \'13\' changes to true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="multiple submitted fotos detected with face")]
        [Xunit.TraitAttribute("FeatureTitle", "leerkracht foto\'s modereren")]
        [Xunit.TraitAttribute("Description", "multiple submitted fotos detected with face")]
        public virtual void MultipleSubmittedFotosDetectedWithFace()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("multiple submitted fotos detected with face", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 116
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
  this.FeatureBackground();
#line hidden
#line 117
    testRunner.When("group \'3G3H3I\' deliveres", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
    testRunner.Then("Value flagged in answer \'2\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 119
    testRunner.And("Value flagged in answer \'9\' changes to true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
    testRunner.And("Value flagged in answer \'10\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
    testRunner.And("Value flagged in answer \'4\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
    testRunner.And("Value flagged in answer \'5\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
    testRunner.And("Value flagged in answer \'6\' changes to true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="no faces detected")]
        [Xunit.TraitAttribute("FeatureTitle", "leerkracht foto\'s modereren")]
        [Xunit.TraitAttribute("Description", "no faces detected")]
        public virtual void NoFacesDetected()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("no faces detected", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 126
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
  this.FeatureBackground();
#line hidden
#line 127
  testRunner.When("group \'1A1B1C\' deliveres", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 128
    testRunner.Then("Value flagged in answer \'1\' changes to false", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.7.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                LeerkrachtFotosModererenFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                LeerkrachtFotosModererenFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
